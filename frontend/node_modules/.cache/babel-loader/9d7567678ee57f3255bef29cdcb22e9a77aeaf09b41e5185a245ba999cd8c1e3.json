{"ast":null,"code":"var _jsxFileName = \"/home/spiderman/APP/test-task/frontend/src/components/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { GoogleOAuthProvider } from '@react-oauth/google';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('http://localhost:5005/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        onLogin();\n        console.log(email, password);\n        navigate('/');\n      } else {\n        alert(data.message);\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  };\n  const responseGoogle = async response => {\n    if (response.error) {\n      console.error('Google login failed:', response.error);\n      return;\n    }\n    console.log('Google response:', response);\n    try {\n      const serverResponse = await fetch('http://localhost:5005/auth/google/callback', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${response.accessToken}` // Include Google access token\n        }\n      });\n      console.log('Server Response Status:', serverResponse.status);\n      const serverData = await serverResponse.json();\n      if (serverResponse.ok) {\n        // Handle successful login (maybe redirect the user to a dashboard)\n        onLogin();\n        navigate('/');\n      } else {\n        console.error('Server error:', serverData.message);\n      }\n    } catch (error) {\n      console.error('Error sending Google login data to the server:', error);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleLogin();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n        clientId: \"490322289333-2126pakku83bsagl3a0t70hlbg20iu8k.apps.googleusercontent.com\",\n        children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: credentialResponse => {\n            console.log(credentialResponse);\n            responseGoogle(credentialResponse);\n            onLogin();\n            navigate('/');\n          },\n          onError: () => {\n            console.log('Login Failed');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Please \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"3EppOPrTUbqGnofT+5nt0Tjfe+w=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","GoogleLogin","GoogleOAuthProvider","jsxDEV","_jsxDEV","Login","onLogin","_s","navigate","email","setEmail","password","setPassword","handleLogin","response","fetch","method","headers","body","JSON","stringify","data","json","ok","console","log","alert","message","error","responseGoogle","serverResponse","accessToken","status","serverData","handleSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","clientId","onSuccess","credentialResponse","onError","href","_c","$RefreshReg$"],"sources":["/home/spiderman/APP/test-task/frontend/src/components/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { GoogleOAuthProvider } from '@react-oauth/google'; \n\n\nconst Login = ({ onLogin }) => {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('http://localhost:5005/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        onLogin();\n        console.log(email, password);\n        navigate('/');\n      } else {\n        alert(data.message);\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  };\n\n  const responseGoogle = async (response) => {\n    if (response.error) {\n      console.error('Google login failed:', response.error);\n      return;\n    }\n  \n    console.log('Google response:', response);\n  \n    try {\n      const serverResponse = await fetch('http://localhost:5005/auth/google/callback', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${response.accessToken}`, // Include Google access token\n        },\n      });\n  \n      console.log('Server Response Status:', serverResponse.status);\n  \n      const serverData = await serverResponse.json();\n  \n      if (serverResponse.ok) {\n        // Handle successful login (maybe redirect the user to a dashboard)\n        onLogin();\n        navigate('/');\n      } else {\n        console.error('Server error:', serverData.message);\n      }\n    } catch (error) {\n      console.error('Error sending Google login data to the server:', error);\n    }\n  };\n  \n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleLogin();\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit}>\n        <label>Email:</label>\n        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n\n        <label>Password:</label>\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n\n        <button type=\"submit\">Login</button>\n        <GoogleOAuthProvider clientId=\"490322289333-2126pakku83bsagl3a0t70hlbg20iu8k.apps.googleusercontent.com\" >\n         <GoogleLogin\n         \n         onSuccess={(credentialResponse)=>{\n        console.log(credentialResponse)\n        responseGoogle(credentialResponse); \n        onLogin();\n        navigate('/');\n\n        }}\n        onError={()=> {\n\n          console.log('Login Failed')\n        }}\n   \n        /> \n         </GoogleOAuthProvider>\n      </form>\n\n      <p>\n        Please <a href=\"/\">test</a>\n      </p>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}